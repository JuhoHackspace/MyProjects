
title Sekvenssikaavio

participant Käyttötapaus
participant User
participant Frontend
participant Backend
participant Database
participant Finnkino
participant IMDB

loop #green jee joo jaa
note over Käyttötapaus:Search events
User->Frontend:/search
Frontend->Backend:get areas
Backend->Finnkino:(/xml/TheatreAreas/) get Area ID's
Finnkino->Backend:Api response XML(areas)
Backend->Frontend:Area ID's for search filtering JSON
Frontend->User:List of areas\nto a dropdown for user to choose from
User->Frontend:/search Select parameters(timeframe, theathre)
Frontend->Backend: get events with params(timeframe, area)
Backend->Finnkino: /xml/Schedule/ + params
Finnkino->Backend:Api response XML(events)
Backend->Frontend: Events list JSON
Frontend->User: Show events
end

loop #grey Kaikilla ryhmän jäsenillä on mahdollisuus lisätä haettuja xxx, xxx ja äytösaikoja (G6) ryhmän sivulle.
note over Käyttötapaus: Post event to group
User->Frontend:/search (Authenticated user) Post event to selected group
Frontend->Backend: post event with params(group id, event id)
Backend->Database: insert into events_
Database->Backend: affected rows(1 == ok)
Backend->Frontend: Post event status(ok, fail)
Frontend->User: Inform user with status
end

loop #gray
note over Käyttötapaus: Search movies
User->Frontend: /search
note right of Frontend: Mahdolliset parametrit:\n- query string\n- include adult boolean\n- language string
Frontend->Backend: /imdb-proxy/3/search/movie
Backend->IMDB: https://api.themoviedb.org/3/search/movie
IMDB->Backend: List of movies
Backend->Frontend:List of movies
Frontend->User: Found movies
end

loop #gray started 18.3 - tauno Sovelluksen tulee mahdollistaa käyttäjän luominen. Käyttäjä luodaan
antamalla käyttäjätunnus ja salasana, jotka mahdollistavat
kirjautumisen sovellukseen. Käyttäjätunnus on uniikki ja sitä
käytetään myös nimimerkkinä sovelluksessa.
note over Käyttötapaus: Create account
User->Frontend: /username & password
Frontend->Backend: /username & hashed password
Backend->Database: /store username & hashed password
Database->Backend: /succes/error
Backend->Frontend: /succes/error
Frontend->User: /succes/error
end

loop #grey started 18.3 - Käyttäjän tulee voida poistaa omat tunnuksensa. Samalla poistetaan
myös kaikki käyttäjän kustomoitu data.
note over Käyttötapaus: Delete account
User->Frontend: /poista käyttäjä
Frontend->Backend: /username & hashed password
Backend->Database: /store username & hashed password
Database->Backend: /succes/error
Backend->Frontend: /succes/error
Frontend->User: /succes/error
end

loop #gray
note over Käyttötapaus:Login
User->Frontend: /login
Frontend->User: render loginpage
User->Frontend: credentials
Frontend->Backend: login as X
Backend->Database: get userdata
Database->Backend: user or not found
Backend->Frontend: session id/authentication response
Frontend->User: success or failure
end

note over Käyttötapaus: Logout
User->Frontend: /logout

note over Käyttötapaus: Edit profile
User->Frontend: /profile/edit

loop #gray
note over Käyttötapaus: Add to favourites (movie)
note right of User: movie_tmdb_id has been acquiredfrom searching \nTMDD prior to adding a favourite.
User->Frontend: /profile/favourites
Frontend->Backend: movie_tmdb_id, JWT token (sub claim on user id)
Backend->Database: INSERT
Database->Backend: success or not
Backend->Frontend: 201 | error code
end

loop #grey Kirjautunut käyttäjä voi jakaa oman suosikkilistansa URI-osoitteena
muiden nähtäväksi.
G15 Sovelluksen
vapaavalintainen
lisäominaisuus
Lisäksi sovellukseen lisä
note over Käyttötapaus: Share favouritelist
User->Frontend: /share favouritelist/to user: username
Frontend -> Backend:/user_to,favoritelistId
Backend -> Database:userID,favoriteListId
Database -> Backend: success or not
Backend -> Frontend: success or not
Frontend -> User: success or not&favouritID
end

note over Käyttötapaus: Create group
User->Frontend: /profile/groups/creategroup
User->Frontend: /community/groups/creategroup

loop #gray
note over Käyttötapaus:See groups as list
note over Käyttötapaus: <color:#orange>Has a follow-up use-case: Join group</color>
User->Frontend: /community/groups
Frontend->Backend: Request a list of groups\nOptional params:\n   max items per page (defaults to 0, infinite)\n   nth page (defaults to 1)
Backend->Database: SELECT
Database->Backend: List of groups
Backend->Frontend: List of groups, pagenum and num pages
end

loop #gray
note over Käyttötapaus: View group movies
User->Frontend: community/groups//group_name/movies
Frontend->Backend: GET group movies with params(group_name)
Backend->Database: SELECT group_id by group_name
Database->Backend: group_id
Backend->Database: SELECT group movies by group_id
Database->Backend: List of group movie id's
Backend->IMDB: api.themoviedb.org/3/discover/movie + params(List of movie id's)
IMDB->Backend: JSON list of movies
Backend->Frontend: JSON List of movies
Frontend->User: Show group movies
end

loop #gray
note over Käyttötapaus: View group events
User->Frontend: community/groups/group_name/events
Frontend->Backend: GET group events with params(group_name)
Backend->Database: SELECT group_id by group_name
Database->Backend: group_id
Backend->Database: SELECT group events by group_id
Database->Backend: List of group event id's
Backend->Finnkino: xml/Schedule/ + params(event id)
Finnkino->Backend: XML event
Backend->Frontend: JSON List of events
Frontend->User: Show group events
end

note over Käyttötapaus: Join group
User->Frontend: /community/groups

note over Käyttötapaus: Leave Group
User->Frontend: /profile/groups/groupX

note over Käyttötapaus: Delete group
User->Frontend: /profile/groups/groupX

note over Käyttötapaus: Delete user from group

note over Käyttötapaus: Handle group join requests
User->Frontend: /profile/groups/groupX

loop #gray
note over Käyttötapaus: Post reviews
User->Frontend: /community/reviews/newreview
Frontend->Backend: Review, Title, Author (JWT Sub = user id)
Backend->Database: INSERT
Database->Backend: Success or not
Backend->Frontend: 201 | error code
end

note over Käyttötapaus: Read reviews
User->Frontend: /community/reviews

loop #gray
note over Käyttötapaus: Edit review
note over User,Frontend: <color:#red>Same endpoint as post new review, but PUT method.\nMust provide full modified entity, and in addition\nmust provide review ID as path parameter.\nSee use-case Post reviews.
User->Frontend: /profile/reviews/:review_id
end

loop #gray
note over Käyttötapaus: Delete reviews
User->Frontend: /profile/reviews/reviewX
note right of Frontend:<color:#red>Review id has been acquired by some means\nprior to making the request.</color>
Frontend->Backend: Review id
Backend->Database: DELETE
Database->Backend: Num affected rows
Backend->Frontend: 200 | error code
end

note over Käyttötapaus: Ban or unban user
